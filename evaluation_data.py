evaluation_data = [
    {"question": "What is FastAPI?", 
     "expected_answer": "FastAPI is a modern, fast web framework for building APIs with Python. It supports asynchronous programming and automatic documentation via OpenAPI."},

    {"question": "What does RAG stand for?", 
     "expected_answer": "Retrieval-Augmented Generation (RAG) combines information retrieval with generative language models to produce context-aware answers."},

    {"question": "What is the main function of ChromaDB?", 
     "expected_answer": "ChromaDB is a vector database that stores embeddings of text chunks. It enables fast similarity search and retrieval."},

    {"question": "What is FAISS used for?", 
     "expected_answer": "FAISS is a library for efficient similarity search on dense vectors. It allows rapid nearest-neighbor search and is commonly used for embeddings generated by transformer models."},

    {"question": "What is MiniLM?", 
     "expected_answer": "MiniLM is a lightweight sentence transformer model used for generating embeddings from text. It converts sentences or paragraphs into numerical vectors that capture semantic meaning."},

    {"question": "What is FLAN-T5?", 
     "expected_answer": "FLAN-T5 is a text-to-text transformer model that can perform multiple NLP tasks such as summarization, translation, and question answering. It uses an encoder-decoder architecture."},

    {"question": "What is semantic search?", 
     "expected_answer": "Semantic search is the process of finding information based on meaning rather than keyword matching. It relies on embeddings and vector similarity to retrieve relevant content."},

    {"question": "What is document chunking?", 
     "expected_answer": "Document chunking divides large texts into smaller segments. Chunking helps in managing long documents efficiently and improves retrieval in RAG pipelines."},

    {"question": "Why do we use vector databases?", 
     "expected_answer": "Vector databases store embeddings along with metadata, allowing fast similarity search. They support operations like inserting new embeddings, updating, and querying."},

    {"question": "How does a RAG API work?", 
     "expected_answer": "RAG APIs combine document chunking, embeddings stored in a vector DB, and an LLM that generates answers based on retrieved chunks."},

    {"question": "Why use MiniLM in RAG?", 
     "expected_answer": "MiniLM generates embeddings for text chunks, which are used to find semantically similar content quickly in the vector database."},

    {"question": "Why is FLAN-T5 used in this project?", 
     "expected_answer": "FLAN-T5 generates answers based on retrieved context from embeddings, providing accurate and context-aware responses."},

    {"question": "Can FAISS be used for persistent storage?", 
     "expected_answer": "No, FAISS only stores embeddings in memory or on disk indices, but it does not manage document metadata like ChromaDB."},

    {"question": "What is the role of embeddings in RAG?", 
     "expected_answer": "Embeddings convert text chunks into numerical vectors that capture semantic meaning, which are then used for similarity search and retrieval."},

    {"question": "What type of architecture does FLAN-T5 have?", 
     "expected_answer": "FLAN-T5 uses an encoder-decoder architecture."},

    {"question": "What is the benefit of chunking documents?", 
     "expected_answer": "Chunking improves retrieval efficiency and helps the LLM generate better answers by providing relevant context segments."},

    {"question": "How does ChromaDB retrieve relevant chunks?", 
     "expected_answer": "ChromaDB performs similarity search on embeddings to quickly fetch the most relevant document chunks."},

    {"question": "What makes FastAPI suitable for RAG?", 
     "expected_answer": "FastAPI supports asynchronous requests, automatic docs, and fast performance, making it ideal for serving AI APIs."},

    {"question": "What is the difference between FAISS and ChromaDB?", 
     "expected_answer": "FAISS is a library for similarity search on embeddings, whereas ChromaDB is a vector database that stores embeddings along with metadata and allows persistent storage."},

    {"question": "What is the overall goal of a RAG system?", 
     "expected_answer": "The goal is to provide context-aware, accurate answers by combining retrieval of relevant documents with generation from an LLM."}
]
